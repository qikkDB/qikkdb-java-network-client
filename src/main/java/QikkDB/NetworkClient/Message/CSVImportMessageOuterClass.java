// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Message/CSVImportMessage.proto

package QikkDB.NetworkClient.Message;

public final class CSVImportMessageOuterClass {
  private CSVImportMessageOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code QikkDB.NetworkClient.Message.DataType}
   */
  public enum DataType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>CONST_INT = 0;</code>
     */
    CONST_INT(0),
    /**
     * <code>CONST_ERROR = -1;</code>
     */
    CONST_ERROR(-1),
    /**
     * <code>CONST_LONG = 1;</code>
     */
    CONST_LONG(1),
    /**
     * <code>CONST_FLOAT = 2;</code>
     */
    CONST_FLOAT(2),
    /**
     * <code>CONST_DOUBLE = 3;</code>
     */
    CONST_DOUBLE(3),
    /**
     * <code>CONST_POINT = 4;</code>
     */
    CONST_POINT(4),
    /**
     * <code>CONST_POLYGON = 5;</code>
     */
    CONST_POLYGON(5),
    /**
     * <code>CONST_STRING = 6;</code>
     */
    CONST_STRING(6),
    /**
     * <code>CONST_INT8_T = 7;</code>
     */
    CONST_INT8_T(7),
    /**
     * <code>COLUMN_INT = 8;</code>
     */
    COLUMN_INT(8),
    /**
     * <code>COLUMN_LONG = 9;</code>
     */
    COLUMN_LONG(9),
    /**
     * <code>COLUMN_FLOAT = 10;</code>
     */
    COLUMN_FLOAT(10),
    /**
     * <code>COLUMN_DOUBLE = 11;</code>
     */
    COLUMN_DOUBLE(11),
    /**
     * <code>COLUMN_POINT = 12;</code>
     */
    COLUMN_POINT(12),
    /**
     * <code>COLUMN_POLYGON = 13;</code>
     */
    COLUMN_POLYGON(13),
    /**
     * <code>COLUMN_STRING = 14;</code>
     */
    COLUMN_STRING(14),
    /**
     * <code>COLUMN_INT8_T = 15;</code>
     */
    COLUMN_INT8_T(15),
    /**
     * <code>DATA_TYPE_SIZE = 16;</code>
     */
    DATA_TYPE_SIZE(16),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>CONST_INT = 0;</code>
     */
    public static final int CONST_INT_VALUE = 0;
    /**
     * <code>CONST_ERROR = -1;</code>
     */
    public static final int CONST_ERROR_VALUE = -1;
    /**
     * <code>CONST_LONG = 1;</code>
     */
    public static final int CONST_LONG_VALUE = 1;
    /**
     * <code>CONST_FLOAT = 2;</code>
     */
    public static final int CONST_FLOAT_VALUE = 2;
    /**
     * <code>CONST_DOUBLE = 3;</code>
     */
    public static final int CONST_DOUBLE_VALUE = 3;
    /**
     * <code>CONST_POINT = 4;</code>
     */
    public static final int CONST_POINT_VALUE = 4;
    /**
     * <code>CONST_POLYGON = 5;</code>
     */
    public static final int CONST_POLYGON_VALUE = 5;
    /**
     * <code>CONST_STRING = 6;</code>
     */
    public static final int CONST_STRING_VALUE = 6;
    /**
     * <code>CONST_INT8_T = 7;</code>
     */
    public static final int CONST_INT8_T_VALUE = 7;
    /**
     * <code>COLUMN_INT = 8;</code>
     */
    public static final int COLUMN_INT_VALUE = 8;
    /**
     * <code>COLUMN_LONG = 9;</code>
     */
    public static final int COLUMN_LONG_VALUE = 9;
    /**
     * <code>COLUMN_FLOAT = 10;</code>
     */
    public static final int COLUMN_FLOAT_VALUE = 10;
    /**
     * <code>COLUMN_DOUBLE = 11;</code>
     */
    public static final int COLUMN_DOUBLE_VALUE = 11;
    /**
     * <code>COLUMN_POINT = 12;</code>
     */
    public static final int COLUMN_POINT_VALUE = 12;
    /**
     * <code>COLUMN_POLYGON = 13;</code>
     */
    public static final int COLUMN_POLYGON_VALUE = 13;
    /**
     * <code>COLUMN_STRING = 14;</code>
     */
    public static final int COLUMN_STRING_VALUE = 14;
    /**
     * <code>COLUMN_INT8_T = 15;</code>
     */
    public static final int COLUMN_INT8_T_VALUE = 15;
    /**
     * <code>DATA_TYPE_SIZE = 16;</code>
     */
    public static final int DATA_TYPE_SIZE_VALUE = 16;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DataType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static DataType forNumber(int value) {
      switch (value) {
        case 0: return CONST_INT;
        case -1: return CONST_ERROR;
        case 1: return CONST_LONG;
        case 2: return CONST_FLOAT;
        case 3: return CONST_DOUBLE;
        case 4: return CONST_POINT;
        case 5: return CONST_POLYGON;
        case 6: return CONST_STRING;
        case 7: return CONST_INT8_T;
        case 8: return COLUMN_INT;
        case 9: return COLUMN_LONG;
        case 10: return COLUMN_FLOAT;
        case 11: return COLUMN_DOUBLE;
        case 12: return COLUMN_POINT;
        case 13: return COLUMN_POLYGON;
        case 14: return COLUMN_STRING;
        case 15: return COLUMN_INT8_T;
        case 16: return DATA_TYPE_SIZE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DataType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DataType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DataType>() {
            public DataType findValueByNumber(int number) {
              return DataType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return QikkDB.NetworkClient.Message.CSVImportMessageOuterClass.getDescriptor().getEnumTypes().get(0);
    }

    private static final DataType[] VALUES = values();

    public static DataType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DataType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:QikkDB.NetworkClient.Message.DataType)
  }

  public interface CSVImportMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:QikkDB.NetworkClient.Message.CSVImportMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string DatabaseName = 1;</code>
     * @return The databaseName.
     */
    java.lang.String getDatabaseName();
    /**
     * <code>string DatabaseName = 1;</code>
     * @return The bytes for databaseName.
     */
    com.google.protobuf.ByteString
        getDatabaseNameBytes();

    /**
     * <code>string CSVName = 2;</code>
     * @return The cSVName.
     */
    java.lang.String getCSVName();
    /**
     * <code>string CSVName = 2;</code>
     * @return The bytes for cSVName.
     */
    com.google.protobuf.ByteString
        getCSVNameBytes();

    /**
     * <code>string Payload = 3;</code>
     * @return The payload.
     */
    java.lang.String getPayload();
    /**
     * <code>string Payload = 3;</code>
     * @return The bytes for payload.
     */
    com.google.protobuf.ByteString
        getPayloadBytes();

    /**
     * <code>repeated .QikkDB.NetworkClient.Message.DataType ColumnTypes = 4;</code>
     * @return A list containing the columnTypes.
     */
    java.util.List<QikkDB.NetworkClient.Message.CSVImportMessageOuterClass.DataType> getColumnTypesList();
    /**
     * <code>repeated .QikkDB.NetworkClient.Message.DataType ColumnTypes = 4;</code>
     * @return The count of columnTypes.
     */
    int getColumnTypesCount();
    /**
     * <code>repeated .QikkDB.NetworkClient.Message.DataType ColumnTypes = 4;</code>
     * @param index The index of the element to return.
     * @return The columnTypes at the given index.
     */
    QikkDB.NetworkClient.Message.CSVImportMessageOuterClass.DataType getColumnTypes(int index);
    /**
     * <code>repeated .QikkDB.NetworkClient.Message.DataType ColumnTypes = 4;</code>
     * @return A list containing the enum numeric values on the wire for columnTypes.
     */
    java.util.List<java.lang.Integer>
    getColumnTypesValueList();
    /**
     * <code>repeated .QikkDB.NetworkClient.Message.DataType ColumnTypes = 4;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of columnTypes at the given index.
     */
    int getColumnTypesValue(int index);
  }
  /**
   * Protobuf type {@code QikkDB.NetworkClient.Message.CSVImportMessage}
   */
  public  static final class CSVImportMessage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:QikkDB.NetworkClient.Message.CSVImportMessage)
      CSVImportMessageOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CSVImportMessage.newBuilder() to construct.
    private CSVImportMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CSVImportMessage() {
      databaseName_ = "";
      cSVName_ = "";
      payload_ = "";
      columnTypes_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CSVImportMessage();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CSVImportMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              databaseName_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              cSVName_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              payload_ = s;
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                columnTypes_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              columnTypes_.add(rawValue);
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int rawValue = input.readEnum();
                if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                  columnTypes_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000001;
                }
                columnTypes_.add(rawValue);
              }
              input.popLimit(oldLimit);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          columnTypes_ = java.util.Collections.unmodifiableList(columnTypes_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return QikkDB.NetworkClient.Message.CSVImportMessageOuterClass.internal_static_QikkDB_NetworkClient_Message_CSVImportMessage_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return QikkDB.NetworkClient.Message.CSVImportMessageOuterClass.internal_static_QikkDB_NetworkClient_Message_CSVImportMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              QikkDB.NetworkClient.Message.CSVImportMessageOuterClass.CSVImportMessage.class, QikkDB.NetworkClient.Message.CSVImportMessageOuterClass.CSVImportMessage.Builder.class);
    }

    public static final int DATABASENAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object databaseName_;
    /**
     * <code>string DatabaseName = 1;</code>
     * @return The databaseName.
     */
    public java.lang.String getDatabaseName() {
      java.lang.Object ref = databaseName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        databaseName_ = s;
        return s;
      }
    }
    /**
     * <code>string DatabaseName = 1;</code>
     * @return The bytes for databaseName.
     */
    public com.google.protobuf.ByteString
        getDatabaseNameBytes() {
      java.lang.Object ref = databaseName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        databaseName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CSVNAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object cSVName_;
    /**
     * <code>string CSVName = 2;</code>
     * @return The cSVName.
     */
    public java.lang.String getCSVName() {
      java.lang.Object ref = cSVName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        cSVName_ = s;
        return s;
      }
    }
    /**
     * <code>string CSVName = 2;</code>
     * @return The bytes for cSVName.
     */
    public com.google.protobuf.ByteString
        getCSVNameBytes() {
      java.lang.Object ref = cSVName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        cSVName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PAYLOAD_FIELD_NUMBER = 3;
    private volatile java.lang.Object payload_;
    /**
     * <code>string Payload = 3;</code>
     * @return The payload.
     */
    public java.lang.String getPayload() {
      java.lang.Object ref = payload_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        payload_ = s;
        return s;
      }
    }
    /**
     * <code>string Payload = 3;</code>
     * @return The bytes for payload.
     */
    public com.google.protobuf.ByteString
        getPayloadBytes() {
      java.lang.Object ref = payload_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        payload_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int COLUMNTYPES_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> columnTypes_;
    private static final com.google.protobuf.Internal.ListAdapter.Converter<
        java.lang.Integer, QikkDB.NetworkClient.Message.CSVImportMessageOuterClass.DataType> columnTypes_converter_ =
            new com.google.protobuf.Internal.ListAdapter.Converter<
                java.lang.Integer, QikkDB.NetworkClient.Message.CSVImportMessageOuterClass.DataType>() {
              public QikkDB.NetworkClient.Message.CSVImportMessageOuterClass.DataType convert(java.lang.Integer from) {
                @SuppressWarnings("deprecation")
                QikkDB.NetworkClient.Message.CSVImportMessageOuterClass.DataType result = QikkDB.NetworkClient.Message.CSVImportMessageOuterClass.DataType.valueOf(from);
                return result == null ? QikkDB.NetworkClient.Message.CSVImportMessageOuterClass.DataType.UNRECOGNIZED : result;
              }
            };
    /**
     * <code>repeated .QikkDB.NetworkClient.Message.DataType ColumnTypes = 4;</code>
     * @return A list containing the columnTypes.
     */
    public java.util.List<QikkDB.NetworkClient.Message.CSVImportMessageOuterClass.DataType> getColumnTypesList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, QikkDB.NetworkClient.Message.CSVImportMessageOuterClass.DataType>(columnTypes_, columnTypes_converter_);
    }
    /**
     * <code>repeated .QikkDB.NetworkClient.Message.DataType ColumnTypes = 4;</code>
     * @return The count of columnTypes.
     */
    public int getColumnTypesCount() {
      return columnTypes_.size();
    }
    /**
     * <code>repeated .QikkDB.NetworkClient.Message.DataType ColumnTypes = 4;</code>
     * @param index The index of the element to return.
     * @return The columnTypes at the given index.
     */
    public QikkDB.NetworkClient.Message.CSVImportMessageOuterClass.DataType getColumnTypes(int index) {
      return columnTypes_converter_.convert(columnTypes_.get(index));
    }
    /**
     * <code>repeated .QikkDB.NetworkClient.Message.DataType ColumnTypes = 4;</code>
     * @return A list containing the enum numeric values on the wire for columnTypes.
     */
    public java.util.List<java.lang.Integer>
    getColumnTypesValueList() {
      return columnTypes_;
    }
    /**
     * <code>repeated .QikkDB.NetworkClient.Message.DataType ColumnTypes = 4;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of columnTypes at the given index.
     */
    public int getColumnTypesValue(int index) {
      return columnTypes_.get(index);
    }
    private int columnTypesMemoizedSerializedSize;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (!getDatabaseNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, databaseName_);
      }
      if (!getCSVNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, cSVName_);
      }
      if (!getPayloadBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, payload_);
      }
      if (getColumnTypesList().size() > 0) {
        output.writeUInt32NoTag(34);
        output.writeUInt32NoTag(columnTypesMemoizedSerializedSize);
      }
      for (int i = 0; i < columnTypes_.size(); i++) {
        output.writeEnumNoTag(columnTypes_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getDatabaseNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, databaseName_);
      }
      if (!getCSVNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, cSVName_);
      }
      if (!getPayloadBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, payload_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < columnTypes_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(columnTypes_.get(i));
        }
        size += dataSize;
        if (!getColumnTypesList().isEmpty()) {  size += 1;
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(dataSize);
        }columnTypesMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof QikkDB.NetworkClient.Message.CSVImportMessageOuterClass.CSVImportMessage)) {
        return super.equals(obj);
      }
      QikkDB.NetworkClient.Message.CSVImportMessageOuterClass.CSVImportMessage other = (QikkDB.NetworkClient.Message.CSVImportMessageOuterClass.CSVImportMessage) obj;

      if (!getDatabaseName()
          .equals(other.getDatabaseName())) return false;
      if (!getCSVName()
          .equals(other.getCSVName())) return false;
      if (!getPayload()
          .equals(other.getPayload())) return false;
      if (!columnTypes_.equals(other.columnTypes_)) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DATABASENAME_FIELD_NUMBER;
      hash = (53 * hash) + getDatabaseName().hashCode();
      hash = (37 * hash) + CSVNAME_FIELD_NUMBER;
      hash = (53 * hash) + getCSVName().hashCode();
      hash = (37 * hash) + PAYLOAD_FIELD_NUMBER;
      hash = (53 * hash) + getPayload().hashCode();
      if (getColumnTypesCount() > 0) {
        hash = (37 * hash) + COLUMNTYPES_FIELD_NUMBER;
        hash = (53 * hash) + columnTypes_.hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static QikkDB.NetworkClient.Message.CSVImportMessageOuterClass.CSVImportMessage parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static QikkDB.NetworkClient.Message.CSVImportMessageOuterClass.CSVImportMessage parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static QikkDB.NetworkClient.Message.CSVImportMessageOuterClass.CSVImportMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static QikkDB.NetworkClient.Message.CSVImportMessageOuterClass.CSVImportMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static QikkDB.NetworkClient.Message.CSVImportMessageOuterClass.CSVImportMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static QikkDB.NetworkClient.Message.CSVImportMessageOuterClass.CSVImportMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static QikkDB.NetworkClient.Message.CSVImportMessageOuterClass.CSVImportMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static QikkDB.NetworkClient.Message.CSVImportMessageOuterClass.CSVImportMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static QikkDB.NetworkClient.Message.CSVImportMessageOuterClass.CSVImportMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static QikkDB.NetworkClient.Message.CSVImportMessageOuterClass.CSVImportMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static QikkDB.NetworkClient.Message.CSVImportMessageOuterClass.CSVImportMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static QikkDB.NetworkClient.Message.CSVImportMessageOuterClass.CSVImportMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(QikkDB.NetworkClient.Message.CSVImportMessageOuterClass.CSVImportMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code QikkDB.NetworkClient.Message.CSVImportMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:QikkDB.NetworkClient.Message.CSVImportMessage)
        QikkDB.NetworkClient.Message.CSVImportMessageOuterClass.CSVImportMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return QikkDB.NetworkClient.Message.CSVImportMessageOuterClass.internal_static_QikkDB_NetworkClient_Message_CSVImportMessage_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return QikkDB.NetworkClient.Message.CSVImportMessageOuterClass.internal_static_QikkDB_NetworkClient_Message_CSVImportMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                QikkDB.NetworkClient.Message.CSVImportMessageOuterClass.CSVImportMessage.class, QikkDB.NetworkClient.Message.CSVImportMessageOuterClass.CSVImportMessage.Builder.class);
      }

      // Construct using QikkDB.NetworkClient.Message.CSVImportMessageOuterClass.CSVImportMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        databaseName_ = "";

        cSVName_ = "";

        payload_ = "";

        columnTypes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return QikkDB.NetworkClient.Message.CSVImportMessageOuterClass.internal_static_QikkDB_NetworkClient_Message_CSVImportMessage_descriptor;
      }

      @java.lang.Override
      public QikkDB.NetworkClient.Message.CSVImportMessageOuterClass.CSVImportMessage getDefaultInstanceForType() {
        return QikkDB.NetworkClient.Message.CSVImportMessageOuterClass.CSVImportMessage.getDefaultInstance();
      }

      @java.lang.Override
      public QikkDB.NetworkClient.Message.CSVImportMessageOuterClass.CSVImportMessage build() {
        QikkDB.NetworkClient.Message.CSVImportMessageOuterClass.CSVImportMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public QikkDB.NetworkClient.Message.CSVImportMessageOuterClass.CSVImportMessage buildPartial() {
        QikkDB.NetworkClient.Message.CSVImportMessageOuterClass.CSVImportMessage result = new QikkDB.NetworkClient.Message.CSVImportMessageOuterClass.CSVImportMessage(this);
        int from_bitField0_ = bitField0_;
        result.databaseName_ = databaseName_;
        result.cSVName_ = cSVName_;
        result.payload_ = payload_;
        if (((bitField0_ & 0x00000001) != 0)) {
          columnTypes_ = java.util.Collections.unmodifiableList(columnTypes_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.columnTypes_ = columnTypes_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof QikkDB.NetworkClient.Message.CSVImportMessageOuterClass.CSVImportMessage) {
          return mergeFrom((QikkDB.NetworkClient.Message.CSVImportMessageOuterClass.CSVImportMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(QikkDB.NetworkClient.Message.CSVImportMessageOuterClass.CSVImportMessage other) {
        if (other == QikkDB.NetworkClient.Message.CSVImportMessageOuterClass.CSVImportMessage.getDefaultInstance()) return this;
        if (!other.getDatabaseName().isEmpty()) {
          databaseName_ = other.databaseName_;
          onChanged();
        }
        if (!other.getCSVName().isEmpty()) {
          cSVName_ = other.cSVName_;
          onChanged();
        }
        if (!other.getPayload().isEmpty()) {
          payload_ = other.payload_;
          onChanged();
        }
        if (!other.columnTypes_.isEmpty()) {
          if (columnTypes_.isEmpty()) {
            columnTypes_ = other.columnTypes_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureColumnTypesIsMutable();
            columnTypes_.addAll(other.columnTypes_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        QikkDB.NetworkClient.Message.CSVImportMessageOuterClass.CSVImportMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (QikkDB.NetworkClient.Message.CSVImportMessageOuterClass.CSVImportMessage) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object databaseName_ = "";
      /**
       * <code>string DatabaseName = 1;</code>
       * @return The databaseName.
       */
      public java.lang.String getDatabaseName() {
        java.lang.Object ref = databaseName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          databaseName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string DatabaseName = 1;</code>
       * @return The bytes for databaseName.
       */
      public com.google.protobuf.ByteString
          getDatabaseNameBytes() {
        java.lang.Object ref = databaseName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          databaseName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string DatabaseName = 1;</code>
       * @param value The databaseName to set.
       * @return This builder for chaining.
       */
      public Builder setDatabaseName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        databaseName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string DatabaseName = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDatabaseName() {
        
        databaseName_ = getDefaultInstance().getDatabaseName();
        onChanged();
        return this;
      }
      /**
       * <code>string DatabaseName = 1;</code>
       * @param value The bytes for databaseName to set.
       * @return This builder for chaining.
       */
      public Builder setDatabaseNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        databaseName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object cSVName_ = "";
      /**
       * <code>string CSVName = 2;</code>
       * @return The cSVName.
       */
      public java.lang.String getCSVName() {
        java.lang.Object ref = cSVName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          cSVName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string CSVName = 2;</code>
       * @return The bytes for cSVName.
       */
      public com.google.protobuf.ByteString
          getCSVNameBytes() {
        java.lang.Object ref = cSVName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          cSVName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string CSVName = 2;</code>
       * @param value The cSVName to set.
       * @return This builder for chaining.
       */
      public Builder setCSVName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        cSVName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string CSVName = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearCSVName() {
        
        cSVName_ = getDefaultInstance().getCSVName();
        onChanged();
        return this;
      }
      /**
       * <code>string CSVName = 2;</code>
       * @param value The bytes for cSVName to set.
       * @return This builder for chaining.
       */
      public Builder setCSVNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        cSVName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object payload_ = "";
      /**
       * <code>string Payload = 3;</code>
       * @return The payload.
       */
      public java.lang.String getPayload() {
        java.lang.Object ref = payload_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          payload_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string Payload = 3;</code>
       * @return The bytes for payload.
       */
      public com.google.protobuf.ByteString
          getPayloadBytes() {
        java.lang.Object ref = payload_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          payload_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string Payload = 3;</code>
       * @param value The payload to set.
       * @return This builder for chaining.
       */
      public Builder setPayload(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        payload_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string Payload = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearPayload() {
        
        payload_ = getDefaultInstance().getPayload();
        onChanged();
        return this;
      }
      /**
       * <code>string Payload = 3;</code>
       * @param value The bytes for payload to set.
       * @return This builder for chaining.
       */
      public Builder setPayloadBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        payload_ = value;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> columnTypes_ =
        java.util.Collections.emptyList();
      private void ensureColumnTypesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          columnTypes_ = new java.util.ArrayList<java.lang.Integer>(columnTypes_);
          bitField0_ |= 0x00000001;
        }
      }
      /**
       * <code>repeated .QikkDB.NetworkClient.Message.DataType ColumnTypes = 4;</code>
       * @return A list containing the columnTypes.
       */
      public java.util.List<QikkDB.NetworkClient.Message.CSVImportMessageOuterClass.DataType> getColumnTypesList() {
        return new com.google.protobuf.Internal.ListAdapter<
            java.lang.Integer, QikkDB.NetworkClient.Message.CSVImportMessageOuterClass.DataType>(columnTypes_, columnTypes_converter_);
      }
      /**
       * <code>repeated .QikkDB.NetworkClient.Message.DataType ColumnTypes = 4;</code>
       * @return The count of columnTypes.
       */
      public int getColumnTypesCount() {
        return columnTypes_.size();
      }
      /**
       * <code>repeated .QikkDB.NetworkClient.Message.DataType ColumnTypes = 4;</code>
       * @param index The index of the element to return.
       * @return The columnTypes at the given index.
       */
      public QikkDB.NetworkClient.Message.CSVImportMessageOuterClass.DataType getColumnTypes(int index) {
        return columnTypes_converter_.convert(columnTypes_.get(index));
      }
      /**
       * <code>repeated .QikkDB.NetworkClient.Message.DataType ColumnTypes = 4;</code>
       * @param index The index to set the value at.
       * @param value The columnTypes to set.
       * @return This builder for chaining.
       */
      public Builder setColumnTypes(
          int index, QikkDB.NetworkClient.Message.CSVImportMessageOuterClass.DataType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureColumnTypesIsMutable();
        columnTypes_.set(index, value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <code>repeated .QikkDB.NetworkClient.Message.DataType ColumnTypes = 4;</code>
       * @param value The columnTypes to add.
       * @return This builder for chaining.
       */
      public Builder addColumnTypes(QikkDB.NetworkClient.Message.CSVImportMessageOuterClass.DataType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureColumnTypesIsMutable();
        columnTypes_.add(value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <code>repeated .QikkDB.NetworkClient.Message.DataType ColumnTypes = 4;</code>
       * @param values The columnTypes to add.
       * @return This builder for chaining.
       */
      public Builder addAllColumnTypes(
          java.lang.Iterable<? extends QikkDB.NetworkClient.Message.CSVImportMessageOuterClass.DataType> values) {
        ensureColumnTypesIsMutable();
        for (QikkDB.NetworkClient.Message.CSVImportMessageOuterClass.DataType value : values) {
          columnTypes_.add(value.getNumber());
        }
        onChanged();
        return this;
      }
      /**
       * <code>repeated .QikkDB.NetworkClient.Message.DataType ColumnTypes = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearColumnTypes() {
        columnTypes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .QikkDB.NetworkClient.Message.DataType ColumnTypes = 4;</code>
       * @return A list containing the enum numeric values on the wire for columnTypes.
       */
      public java.util.List<java.lang.Integer>
      getColumnTypesValueList() {
        return java.util.Collections.unmodifiableList(columnTypes_);
      }
      /**
       * <code>repeated .QikkDB.NetworkClient.Message.DataType ColumnTypes = 4;</code>
       * @param index The index of the value to return.
       * @return The enum numeric value on the wire of columnTypes at the given index.
       */
      public int getColumnTypesValue(int index) {
        return columnTypes_.get(index);
      }
      /**
       * <code>repeated .QikkDB.NetworkClient.Message.DataType ColumnTypes = 4;</code>
       * @param index The index of the value to return.
       * @return The enum numeric value on the wire of columnTypes at the given index.
       * @return This builder for chaining.
       */
      public Builder setColumnTypesValue(
          int index, int value) {
        ensureColumnTypesIsMutable();
        columnTypes_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .QikkDB.NetworkClient.Message.DataType ColumnTypes = 4;</code>
       * @param value The enum numeric value on the wire for columnTypes to add.
       * @return This builder for chaining.
       */
      public Builder addColumnTypesValue(int value) {
        ensureColumnTypesIsMutable();
        columnTypes_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .QikkDB.NetworkClient.Message.DataType ColumnTypes = 4;</code>
       * @param values The enum numeric values on the wire for columnTypes to add.
       * @return This builder for chaining.
       */
      public Builder addAllColumnTypesValue(
          java.lang.Iterable<java.lang.Integer> values) {
        ensureColumnTypesIsMutable();
        for (int value : values) {
          columnTypes_.add(value);
        }
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:QikkDB.NetworkClient.Message.CSVImportMessage)
    }

    // @@protoc_insertion_point(class_scope:QikkDB.NetworkClient.Message.CSVImportMessage)
    private static final QikkDB.NetworkClient.Message.CSVImportMessageOuterClass.CSVImportMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new QikkDB.NetworkClient.Message.CSVImportMessageOuterClass.CSVImportMessage();
    }

    public static QikkDB.NetworkClient.Message.CSVImportMessageOuterClass.CSVImportMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CSVImportMessage>
        PARSER = new com.google.protobuf.AbstractParser<CSVImportMessage>() {
      @java.lang.Override
      public CSVImportMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CSVImportMessage(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CSVImportMessage> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CSVImportMessage> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public QikkDB.NetworkClient.Message.CSVImportMessageOuterClass.CSVImportMessage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_QikkDB_NetworkClient_Message_CSVImportMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_QikkDB_NetworkClient_Message_CSVImportMessage_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\036Message/CSVImportMessage.proto\022\034QikkDB" +
      ".NetworkClient.Message\"\207\001\n\020CSVImportMess" +
      "age\022\024\n\014DatabaseName\030\001 \001(\t\022\017\n\007CSVName\030\002 \001" +
      "(\t\022\017\n\007Payload\030\003 \001(\t\022;\n\013ColumnTypes\030\004 \003(\016" +
      "2&.QikkDB.NetworkClient.Message.DataType" +
      "*\324\002\n\010DataType\022\r\n\tCONST_INT\020\000\022\030\n\013CONST_ER" +
      "ROR\020\377\377\377\377\377\377\377\377\377\001\022\016\n\nCONST_LONG\020\001\022\017\n\013CONST_" +
      "FLOAT\020\002\022\020\n\014CONST_DOUBLE\020\003\022\017\n\013CONST_POINT" +
      "\020\004\022\021\n\rCONST_POLYGON\020\005\022\020\n\014CONST_STRING\020\006\022" +
      "\020\n\014CONST_INT8_T\020\007\022\016\n\nCOLUMN_INT\020\010\022\017\n\013COL" +
      "UMN_LONG\020\t\022\020\n\014COLUMN_FLOAT\020\n\022\021\n\rCOLUMN_D" +
      "OUBLE\020\013\022\020\n\014COLUMN_POINT\020\014\022\022\n\016COLUMN_POLY" +
      "GON\020\r\022\021\n\rCOLUMN_STRING\020\016\022\021\n\rCOLUMN_INT8_" +
      "T\020\017\022\022\n\016DATA_TYPE_SIZE\020\020b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_QikkDB_NetworkClient_Message_CSVImportMessage_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_QikkDB_NetworkClient_Message_CSVImportMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_QikkDB_NetworkClient_Message_CSVImportMessage_descriptor,
        new java.lang.String[] { "DatabaseName", "CSVName", "Payload", "ColumnTypes", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
